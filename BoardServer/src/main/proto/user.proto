syntax = "proto3";

package board;


service UserAPI {
    rpc GetSignUp (SignupRequest) returns (IsSuccess);
    rpc GetLogin (LoginRequest) returns (LoginResponse);
    rpc GetUserAndRefresh (Empty) returns (UserAvatarToken);
    rpc SetOffline (Empty) returns (IsSuccess);
    rpc SetAvatar (ImageProto) returns (IsSuccess);
    rpc GetUserById (UserId) returns (User);
    rpc LogOut (Empty) returns (IsSuccess);
    rpc ChangeUserData (User) returns (IsSuccess);
    rpc DeleteUser (Empty) returns (IsSuccess);

    rpc AddComment (Comment) returns (IsSuccess);
    rpc EditComment (Comment) returns (IsSuccess);
    rpc DeleteComment (Id) returns (IsSuccess);
    rpc GetComments (UserId) returns (CommentsResponse);
    rpc GetUserComments (Empty) returns (CommentsResponse);
}

message Empty {
}

message IsSuccess {
    bool login = 1;
}

message UserId {
    string id = 1;
}

message ImageProto {
    bytes chunk = 2;
}

message LoginRequest {
    string username = 1;
    string password = 2;
    string deviceToken = 4;
}

message LoginResponse {
    User user = 1;
    string access_token = 2;
}

message SignupRequest {
    string username = 1;
    string password = 2;
    string phone = 3;
}

message UserAvatarToken {
    User user = 1;
    string token = 2;
}

message User {
    string id = 1;
    string name = 2;
    string username = 3;
    string password = 4;
    string email = 5;
    string phone = 6;
    string address = 7;
    string avatar = 8;
    bool notify = 9;
    float rating = 10;
}

message Comment {
    string id = 1;
    int32 rating = 2;
    string text = 3;
    User convicted = 4;
    User owner = 5;
    string created = 6;
}

message CommentsResponse {
    repeated Comment comments = 1;
}

message Id {
    string id = 1;
}